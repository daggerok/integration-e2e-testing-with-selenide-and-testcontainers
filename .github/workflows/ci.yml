name: CI
on: [push]

jobs:
  unix:
    strategy:
      matrix:
        java: [11]
        os: [ubuntu-latest]
        nodejs-version: [12]
        python-version: [3.8]
        docker-version: [19.09]
        docker-channel: [stable]
        #os: [ubuntu-latest, macos-latest] macOS doesn't support by docker plugin
    name: Java ${{ matrix.java }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    steps:
      - name: Git clone
        uses: actions/checkout@v1

      - name: Setup Docker ${{ matrix.docker-channel }} ${{ matrix.docker-version }}
        uses: docker-practice/actions-setup-docker@master
        with:
          docker_version: ${{ matrix.docker-version }}
          docker_channel: ${{ matrix.docker-channel }}
      - name: Test Docker ${{ matrix.docker-channel }} ${{ matrix.docker-version }}
        run: |
          cd $GITHUB_WORKSPACE && docker version

      - name: Setup NodeJS ${{ matrix.nodejs-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.nodejs-version }}
      - name: Cache npm ${{ matrix.nodejs-version }} deps
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-${{ matrix.os }}-npm-
          restore-keys: |
            ${{ runner.os }}-${{ matrix.os }}-npm-
      - name: Install npm apps (wait-port)
        run: npm install -g wait-port

      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: Cache maven deps ~/.m2/repository
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-${{ matrix.os }}-maven-
          restore-keys: |
            ${{ runner.os }}-${{ matrix.os }}-maven-
      - name: Build maven apps
        run: cd $GITHUB_WORKSPACE && ./mvnw clean package
      #- name: Run maven apps
      #  run: java -jar $GITHUB_WORKSPACE/target/*.jar || echo 'oops...'

  windows:
    strategy:
      matrix:
        java: [11]
        os: [windows-latest]
        nodejs-version: [12]
        python-version: [3.8]
        gradle-version: [6.2]
        maven-version: [3.6.3]
        docker-channel: [stable]
        docker-version: [19.09]
        #docker_version: [19.09, 19.03]
    name: Java ${{ matrix.java }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    steps:
      - name: Git clone
        uses: actions/checkout@v1

      - name: Setup Docker ${{ matrix.docker-channel }} ${{ matrix.docker-version }}
        uses: docker-practice/actions-setup-docker@master
        with:
          docker_version: ${{ matrix.docker-version }}
          docker_channel: ${{ matrix.docker-channel }}
      - name: Test Docker
        shell: cmd
        run: |
          cd %GITHUB_WORKSPACE% & docker version

      - name: Setup NodeJS ${{ matrix.nodejs-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.nodejs-version }}
      - name: Cache npm
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-${{ matrix.os }}-npm-
          restore-keys: |
            ${{ runner.os }}-${{ matrix.os }}-npm-
      - name: Install npm apps (wait-port)
        run: npm install -g wait-port

      - name: Setup java ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: Cache maven deps
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-${{ matrix.os }}-maven-
          restore-keys: |
            ${{ runner.os }}-${{ matrix.os }}-maven-
      - name: Build maven apps
        shell: cmd
        run: cd %GITHUB_WORKSPACE% & call mvnw.cmd clean package
      #- name: Test maven apps
      #  shell: cmd
      #  run: |
      #    @chcp 65001>nul
      #    java -Dfile.encoding="UTF-8" -jar %GITHUB_WORKSPACE%\target\*.jar ...
      #    echo wait-port 7070...
      #    sleep 5s
